from telegram.ext import Updater, CommandHandler
import logging
import json
import os
from dotenv import load_dotenv

load_dotenv()

OPEN_POSITIONS_FILE = "open_positions.json"

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

def start(update, context):
    update.message.reply_text("مرحبًا! استخدم /help لمعرفة الأوامر المتاحة.")

def help_command(update, context):
    commands = """
/start - بدء المحادثة
/help - قائمة الأوامر
/status - حالة البوت
/positions - الصفقات المفتوحة
/stop - إيقاف البوت مؤقتًا (تحتاج تنفيذ خاص)
/resume - استئناف البوت (تحتاج تنفيذ خاص)
"""
    update.message.reply_text(commands)

def status(update, context):
    update.message.reply_text("البوت يعمل بشكل طبيعي.")

def positions(update, context):
    if os.path.exists(OPEN_POSITIONS_FILE):
        with open(OPEN_POSITIONS_FILE, "r") as f:
            positions = json.load(f)
        if positions:
            msg = "الصفقات المفتوحة:\n"
            for pos in positions:
                msg += f"{pos['symbol']} - الكمية: {pos['quantity']} - سعر الدخول: {pos['entry_price']}\n"
        else:
            msg = "لا توجد صفقات مفتوحة حالياً."
    else:
        msg = "لا توجد صفقات مفتوحة حالياً."
    update.message.reply_text(msg)

def stop_bot(update, context):
    # تحتاج تنفيذ خاص لإيقاف البوت (مثلاً تغيير حالة في ملف أو قاعدة بيانات)
    update.message.reply_text("تم إيقاف البوت مؤقتًا (خاصية تحت التطوير).")

def resume_bot(update, context):
    # تحتاج تنفيذ خاص لاستئناف البوت
    update.message.reply_text("تم استئناف البوت (خاصية تحت التطوير).")
